{"version":3,"sources":["../../Finance_api/routes/users.js"],"names":["express","require","router","Router","User","passport","validateRegisterInput","validateLoginInput","post","req","res","errors","isValid","body","flash","redirect","check","findOne","email","create","next","authenticate","err","user","info","logIn","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,IAAI,GAAGH,OAAO,CAAC,iBAAD,CAApB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,oBAAD,CAAxB,C,CAEA;;;AACA,MAAMK,qBAAqB,GAAGL,OAAO,CAAC,wBAAD,CAArC;;AACA,MAAMM,kBAAkB,GAAGN,OAAO,CAAC,qBAAD,CAAlC,C,CACA;;;AAEAC,MAAM,CAACM,IAAP,CAAY,WAAZ,EAAyB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC3C;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBN,qBAAqB,CAACG,GAAG,CAACI,IAAL,CAAjD,CAF2C,CAG3C;;AACA,MAAI,CAACD,OAAL,EAAc;AACZH,IAAAA,GAAG,CAACK,KAAJ,CAAU,aAAV,EAAyBH,MAAzB;AACA,WAAOD,GAAG,CAACK,QAAJ,CAAa,MAAb,CAAP;AACD,GAHD,MAGO;AACL,QAAIC,KAAK,GAAG,MAAMZ,IAAI,CAACa,OAAL,CAAa;AAAEC,MAAAA,KAAK,EAAET,GAAG,CAACI,IAAJ,CAASK;AAAlB,KAAb,CAAlB;;AACA,QAAIF,KAAJ,EAAW;AACTP,MAAAA,GAAG,CAACK,KAAJ,CAAU,aAAV,EAAyB,sBAAzB;AACA,aAAOJ,GAAG,CAACK,QAAJ,CAAa,MAAb,CAAP;AACD,KAHD,MAGO;AACL,YAAMX,IAAI,CAACe,MAAL,CAAYV,GAAG,CAACI,IAAhB,CAAN;AACAJ,MAAAA,GAAG,CAACK,KAAJ,CAAU,aAAV,EAAyB,iDAAzB;AACA,aAAOJ,GAAG,CAACK,QAAJ,CAAa,GAAb,CAAP;AACD;AACF;AACF,CAlBD;AAoBAb,MAAM,CAACM,IAAP,CAAY,QAAZ,EAAsB,OAAOC,GAAP,EAAYC,GAAZ,EAAiBU,IAAjB,KAA0B;AAC9Cf,EAAAA,QAAQ,CAACgB,YAAT,CAAsB,OAAtB,EAA+B,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,IAArB,EAA2B;AACxD,QAAIF,GAAJ,EAAS,OAAOF,IAAI,CAACE,GAAD,CAAX;;AACT,QAAI,CAACC,IAAL,EAAW;AACTd,MAAAA,GAAG,CAACK,KAAJ,CAAU,aAAV,EAAyB,4BAAzB;AACA,aAAOJ,GAAG,CAACK,QAAJ,CAAa,MAAb,CAAP;AACD;;AACDN,IAAAA,GAAG,CAACgB,KAAJ,CAAUF,IAAV,EAAgB,UAAUD,GAAV,EAAe;AAC7B,UAAIA,GAAJ,EAAS,OAAOF,IAAI,CAACE,GAAD,CAAX;AACT,aAAOZ,GAAG,CAACK,QAAJ,CAAa,OAAb,CAAP;AACD,KAHD;AAID,GAVD,EAUGN,GAVH,EAUQC,GAVR,EAUaU,IAVb;AAWD,CAZD;AAcAM,MAAM,CAACC,OAAP,GAAiBzB,MAAjB","sourcesContent":["const express = require(\"express\");\r\nconst router = express.Router();\r\nconst User = require('../models/users');\r\nconst passport = require('../config/passport');\r\n\r\n// Load input validation\r\nconst validateRegisterInput = require(\"../validation/register\");\r\nconst validateLoginInput = require(\"../validation/login\");\r\n// Load User model\r\n\r\nrouter.post(\"/register\", async (req, res) => {\r\n  // Form validation\r\n  const { errors, isValid } = validateRegisterInput(req.body);\r\n  // Check validation\r\n  if (!isValid) {\r\n    req.flash('success_msg', errors);\r\n    return res.redirect('back');\r\n  } else {\r\n    let check = await User.findOne({ email: req.body.email });\r\n    if (check) {\r\n      req.flash('success_msg', 'Email already in use');\r\n      return res.redirect('back');\r\n    } else {\r\n      await User.create(req.body);\r\n      req.flash('success_msg', 'Account created successfully, you can now login');\r\n      return res.redirect('/');\r\n    }\r\n  }\r\n});\r\n\r\nrouter.post(\"/login\", async (req, res, next) => {\r\n  passport.authenticate('local', function (err, user, info) {\r\n    if (err) return next(err)\r\n    if (!user) {\r\n      req.flash('success_msg', 'Incorect Email or password');\r\n      return res.redirect('back');\r\n    }\r\n    req.logIn(user, function (err) {\r\n      if (err) return next(err);\r\n      return res.redirect('/home');\r\n    });\r\n  })(req, res, next);\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"users.js"}