{"version":3,"sources":["../../Finance_api/config/passport.js"],"names":["passport","require","LocalStrategy","Strategy","User","serializeUser","user","done","id","deserializeUser","findById","err","use","usernameField","passwordField","email","password","findOne","message","comparePassword","isMatch","module","exports"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,gBAAD,CAAP,CAA0BE,QAAhD;;AACA,MAAMC,IAAI,GAAGH,OAAO,CAAC,iBAAD,CAApB,C,CAEA;;;AACAD,QAAQ,CAACK,aAAT,CAAuB,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrCA,EAAAA,IAAI,CAAC,IAAD,EAAOD,IAAI,CAACE,EAAZ,CAAJ;AACD,CAFD,E,CAIA;;AACAR,QAAQ,CAACS,eAAT,CAAyB,CAACD,EAAD,EAAKD,IAAL,KAAc;AAAEH,EAAAA,IAAI,CAACM,QAAL,CAAcF,EAAd,EAAkB,CAACG,GAAD,EAAML,IAAN,KAAe;AAAEC,IAAAA,IAAI,CAACI,GAAD,EAAML,IAAN,CAAJ;AAAiB,GAApD;AAAuD,CAAhG,E,CAEA;;AACAN,QAAQ,CAACY,GAAT,CAAa,IAAIV,aAAJ,CAAkB;AAC7BW,EAAAA,aAAa,EAAE,OADc;AAE7BC,EAAAA,aAAa,EAAE;AAFc,CAAlB,EAGV,CAACC,KAAD,EAAQC,QAAR,EAAkBT,IAAlB,KAA2B;AAC5BH,EAAAA,IAAI,CAACa,OAAL,CAAa;AAAEF,IAAAA,KAAK,EAAEA;AAAT,GAAb,EAA+B,CAACJ,GAAD,EAAML,IAAN,KAAe;AAC1C,QAAIK,GAAJ,EAAS,OAAOJ,IAAI,CAACI,GAAD,CAAX;AACT,QAAI,CAACL,IAAL,EAAW,OAAOC,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAAd,CAAX;AACXZ,IAAAA,IAAI,CAACa,eAAL,CAAqBH,QAArB,EAA+B,CAACL,GAAD,EAAMS,OAAN,KAAkB;AAC7C,UAAIA,OAAJ,EAAa;AACT,eAAOb,IAAI,CAAC,IAAD,EAAOD,IAAP,CAAX;AACH,OAFD,MAEO;AACH,eAAOC,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc;AAAEW,UAAAA,OAAO,EAAE;AAAX,SAAd,CAAX;AACH;AACJ,KAND;AAOH,GAVD;AAWD,CAfY,CAAb;AAiBAG,MAAM,CAACC,OAAP,GAAiBtB,QAAjB","sourcesContent":["const passport = require('passport');\r\nconst LocalStrategy = require('passport-local').Strategy;\r\nconst User = require('../models/users');\r\n\r\n//Serialize user\r\npassport.serializeUser((user, done) => {\r\n  done(null, user.id)\r\n})\r\n\r\n//Deserialize user\r\npassport.deserializeUser((id, done) => { User.findById(id, (err, user) => { done(err, user) }) });\r\n\r\n//Local Strategy\r\npassport.use(new LocalStrategy({\r\n  usernameField: 'email',\r\n  passwordField: 'password',\r\n}, (email, password, done) => {\r\n  User.findOne({ email: email }, (err, user) => {\r\n      if (err) return done(err);\r\n      if (!user) return done(null, false, { message: 'Incorrect Username' });\r\n      user.comparePassword(password, (err, isMatch) => {\r\n          if (isMatch) {\r\n              return done(null, user);\r\n          } else {\r\n              return done(null, false, { message: 'Incorrect password.' });\r\n          }\r\n      })\r\n  })\r\n}))\r\n\r\nmodule.exports = passport;"],"file":"passport.js"}